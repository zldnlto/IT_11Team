// 다음 배열 내장함수의 시간 복잡도가 O(1)이 아닌 것을 모두 고르시오.
let arr = [1, 3, 4, 5];
// arr[i]
// arr.push(5)
// arr.slice()
// arr.pop()
// arr.includes(5)

const 설명 = {
  서동현님_설명:
    "알고리즘을 해결하는데 걸리는 시간은 거의 대부분 입력의 개수 즉, 입력의 크기와 관계가 있는데 시간 복잡도는 알고리즘을 해결하는데 걸리는 시간을 입력의 크기에 대해 대략적인 비율로 나타낸 것입니다..!!",

  김태수님_설명:
    "연산이 입력한 n에 비례하지 않고, 그냥 10억을 입력하든 100억을 입력하든, 고정된 상수값의 연산을 가진다면 O(1)이라 하구 10억을 입력했을 때, 10억개를 모두 돌아야 한다면 O(N)이라고 할 수 있어요.O(n), O(1) 이런 것을 빅 O 노테이션이라고 하는데 알고리즘에 있어서 최악의 연산 상태를 고려하는 설명법? 이라고 할 수 있거든요",

  박시우님_설명: "O(1) : 반복 안함, O(N) : 반복 1중, O(N^2) : 반복 2중",
};


// 답-> 3,5